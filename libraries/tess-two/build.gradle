buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}

apply plugin: 'android-library'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"
    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 21
    }
    sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        resources.srcDirs = ['src']
        res.srcDirs = ['res']
        jni.srcDirs = []
//        jniLibs.srcDirs = ['libs']

    }

    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        String ndkDir = project.plugins.findPlugin('android-library').getNdkFolder()
        commandLine "$ndkDir/ndk-build",
                'NDK_PROJECT_PATH=build/intermediates/ndk',
                'NDK_LIBS_OUT=libs',
                'APP_BUILD_SCRIPT=jni/Android.mk',
                'NDK_APPLICATION_MK=jni/Application.mk'
    }

    task ndkLibsToJar(type: Zip, dependsOn: 'ndkBuild', description: 'Create a JAR of the native libs') {
        destinationDir new File(rootDir, 'libs')
        baseName 'tess-two-native'
        extension 'jar'
        from(new File('libs')) { include '**/*.so'
            exclude 'x86'
        }
        into 'lib/'
    }

    task makeJar(type: Copy, dependsOn: tasks.withType(JavaCompile), description: 'Create a JAR of the java classes') {
        from("build/intermediates/bundles/debug")
        into new File(rootDir, 'libs')
        include('classes.jar')
        rename ('classes.jar', 'tess-two-classes.jar')
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkLibsToJar
    }

//    buildTypes.all{ buildType ->
//        task "${buildType.name}CopyFiles" (type: Copy)
//        "${buildType.name}CopyFiles" {
//            description = 'Create a JAR of the java classes'
//            from("build/intermediates/classes/${buildType.name}")
//            into('../../libs')
//            include('classes.jar')
//            rename ('classes.jar', 'tess-two-classes.jar')
//        }
//
//        tasks.getByPath(":libraries:${project.name}:compileReleaseSources").dependsOn "${buildType.name}CopyFiles"
//    }

}
